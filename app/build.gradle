plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

android {
    namespace "emerald.apps.fairychess"
    compileSdk 34

    defaultConfig {
        applicationId "emerald.apps.fairychess"
        minSdk 31
        targetSdk 34
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'x86_64', 'arm64-v8a'
        }

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
                cppFlags "-std=c++17"
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // This ensures native libraries are packaged with the test APK
        packagingOptions {
            jniLibs {
                useLegacyPackaging true
            }
        }


    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }


    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

tasks.register('copyTestLibs') {
    doLast {
        def debugDir = new File(project.projectDir, ".cxx/Debug")
        println "Debug directory: ${debugDir.absolutePath}"

        // Find the hash directory
        def hashDir = debugDir.listFiles()?.find { it.isDirectory() }
        if (hashDir) {
            println "Found hash directory: ${hashDir.absolutePath}"

            ["x86_64", "arm64-v8a"].each { arch ->
                // Look in obj subdirectory
                def sourceDir = new File(hashDir, "obj/${arch}")
                def targetDir = new File(project.projectDir, "src/androidTest/jniLibs/${arch}")

                println "\nChecking ${arch} directory:"
                println "Source dir: ${sourceDir.absolutePath}"
                if (sourceDir.exists()) {
                    println "Files in source dir:"
                    sourceDir.listFiles().each { file ->
                        println " - ${file.name}"
                    }

                    targetDir.mkdirs()
                    copy {
                        from sourceDir
                        into targetDir
                        include '*.so'
                    }

                    println "Files in target dir after copy:"
                    targetDir.listFiles()?.each { file ->
                        println " - ${file.name}"
                    }
                } else {
                    println "Source directory does not exist: ${sourceDir.absolutePath}"
                }
            }
        } else {
            println "No hash directory found in ${debugDir.absolutePath}"
        }
    }
}

tasks.named("preBuild") {
    dependsOn('copyTestLibs')
}
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
    implementation 'androidx.core:core-ktx:1.12.0'

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //Views and Styling
    implementation 'com.google.android.material:material:1.9.0'
    implementation "androidx.fragment:fragment-ktx:1.6.2"
    implementation "androidx.activity:activity-ktx:1.8.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"

    // Room
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'com.google.firebase:firebase-firestore:25.1.1'
    annotationProcessor 'androidx.room:room-compiler:2.6.1'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'

    // MultiDex
    implementation 'androidx.multidex:multidex:2.0.1'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'org.json:json:20231013'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
